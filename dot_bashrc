#!/usr/bin/env bash

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

HISTCONTROL=ignoreboth
shopt -s histappend
HISTSIZE=10000
HISTFILESIZE=10000
shopt -s checkwinsize

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

LS_COLORS="ow=1;32:di=1;32"
export LS_COLORS

# Colors
RESET='\033[0m'
RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
OCHRE='\033[38;5;95m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
WHITE='\033[01;37m'

# Aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias vim="nvim"
alias _vim="/usr/bin/vim"
alias ga="git add"
alias gd="git diff"
alias gs="git status -s"
alias gc="git commit -m"
alias gf="git fetch"
alias gcl="git clean -dfx"
alias gl="git log --oneline"
alias gp="git push"
alias gri="git rebase -i"

# Check if exa is installed
if command -v exa &>/dev/null; then
  alias ls="exa --icons --git"
  alias la="exa --icons --git -a"
  alias ll="exa --icons --git -l"
  alias lla="exa --icons --git -la"
  alias _ls="/usr/bin/ls --color=auto"
else
  alias ls='ls --color=auto'
  alias ll='ls -AlF'
  alias la='ls -A'
  alias lla='ls -lFA'
fi

OS_NAME="$(cat /etc/os-release 2>/dev/null | grep -e '^NAME=')"

# Check if we're on Arch or Ubuntu and set up aliases accordingly based on OS
if [[ "${OS_NAME}" =~ "Arch Linux" ]]; then
  alias update="sudo pacman -Fy; sudo pkgfile --update; yay -Syu --sudoloop --noconfirm; nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'; echo 'Update completed :)'; sleep 2"
  alias ins="sudo pacman -S"
  alias rem="sudo pacman -Rns"
  alias yins="yay -S"
  alias yrem="yay -Rns"
elif [[ "${OS_NAME}" =~ "Ubuntu" ]]; then
  alias update="sudo apt update -y; sudo apt upgrade -y; sudo apt autoremove -y"
  alias ins="sudo apt install -y"
  alias rem="sudo apt autoremove --purge"
fi

# Git
function git_color {
  local git_status="$(git status 2> /dev/null)"

  if [[ ! $git_status =~ "working tree clean" ]]; then
    echo -e $RED
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e $YELLOW
  elif [[ $git_status =~ "nothing to commit" ]]; then
    echo -e $GREEN
  else
    echo -e $OCHRE
  fi
}

function git_branch {
  local git_status="$(git status 2> /dev/null)"
  local on_branch="On branch ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo " $branch"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo " $commit"
  fi
}

PS1="\[$YELLOW\]\u\[$PURPLE\]@\[$GREEN\]\h \[$CYAN\]\W"
PS1+="\[\$(git_color)\]"
PS1+="\$(git_branch)"
PS1+=" \[$PURPLE\]$\[$RESET\] "
export PS1
